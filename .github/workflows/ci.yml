name: ci

on:
  push:
    branches: [main]
    tags: ["**"]
  pull_request:
    branches: [main]
  merge_group:
    branches: [main]
  workflow_call:
  workflow_dispatch:

permissions: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref_name != github.event.repository.default_branch }}

jobs:
  python:
    permissions:
      contents: read

    runs-on: ubuntu-latest
    env:
      ENVIRONMENT: ci
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - uses: astral-sh/setup-uv@f94ec6bedd8674c4426838e6b50417d36b6ab231 # v5

      - id: setup-python
        uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5

      - run: |
          uv lock --check
          uv sync --frozen --no-default-groups
          uv pip list

      - if: failure()
        run: uv run --no-sync lightning fit --print_config

      - if: failure()
        run: uv run --no-sync bentoml

      - if: failure()
        run: uv run --no-sync python -m mf_torch.lightning

      - if: failure()
        run: uv run --no-sync python -m mf_torch.data.lightning

      - if: failure()
        run: uv run --no-sync data

  docker:
    permissions:
      contents: read
      packages: write

    runs-on: ubuntu-latest
    env:
      GHCR_IMAGE_NAME: ghcr.io/${{ github.repository }}

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          sparse-checkout: |
            Dockerfile
            uv.lock

      - uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf # v4
        with:
          path: |
            var-cache-apt
            var-lib-apt
            root-cache-uv
          key: buildkit-mounts-${{ runner.os }}-${{ hashFiles('**/Dockerfile', '**/*.lock') }}
          restore-keys: |
            buildkit-mounts-${{ runner.os }}

      - uses: reproducible-containers/buildkit-cache-dance@5b6db76d1da5c8b307d5d2e0706d266521b710de # v3
        with:
          cache-map: |
            {
              "var-cache-apt": "/var/cache/apt",
              "var-lib-apt": "/var/lib/apt",
              "root-cache-uv": "/root/.cache/uv"
            }

      - uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3

      - id: build
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6
        with:
          cache-from: |
            ${{ env.GHCR_IMAGE_NAME }}:cache
          load: true

      - if: failure()
        run: docker run --rm ${{ steps.build.outputs.imageid }} uv run --no-sync lightning fit --print_config

      - if: failure()
        run: docker run --rm ${{ steps.build.outputs.imageid }} uv run --no-sync bentoml

      - if: failure()
        run: docker run --rm ${{ steps.build.outputs.imageid }} python -m mf_torch.lightning

      - if: failure()
        run: docker run --rm ${{ steps.build.outputs.imageid }} python -m mf_torch.data.lightning

      - if: failure()
        run: docker run --rm ${{ steps.build.outputs.imageid }}uv run --no-sync data

      - id: docker_metadata
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5
        with:
          images: ${{ env.GHCR_IMAGE_NAME }}

      - if: ${{ github.event_name == 'push' || github.ref_name == github.event.repository.default_branch }}
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}

      - if: ${{ github.event_name == 'push' || github.ref_name == github.event.repository.default_branch }}
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6
        with:
          cache-from: |
            ${{ env.GHCR_IMAGE_NAME }}:cache
          cache-to: type=registry,ref=${{ env.GHCR_IMAGE_NAME }}:cache,mode=max
          tags: ${{ steps.docker_metadata.outputs.tags }}
          labels: ${{ steps.docker_metadata.outputs.labels }}
          annotations: ${{ steps.docker_metadata.outputs.annotations }}
          push: ${{ github.event_name == 'push' || github.ref_name == github.event.repository.default_branch }}
