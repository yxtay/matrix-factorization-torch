name: ci

on:
  push:
    branches: [main]
    tags: ["**"]
  pull_request:
    branches: [main]
  merge_group:
    branches: [main]
  workflow_call:
  workflow_dispatch:

permissions: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref_name != github.event.repository.default_branch }}

jobs:
  python:
    permissions:
      contents: read

    runs-on: ubuntu-latest
    env:
      HF_HOME: /tmp/huggingface
      PROJECT_NAME: mf_torch
      UV_LOCKED: 1
      UV_NO_SYNC: 1
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4
        with:
          path: ${{ env.HF_HOME }}
          key: ${{ runner.os }}-huggingface-${{ hashFiles('**/uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-huggingface-

      - uses: astral-sh/setup-uv@445689ea25e0de0a23313031f5fe577c74ae45a1 # v6

      - id: setup-python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5

      - run: |
          uv lock --check
          uv sync
          uv pip list

      - if: ${{ success() || failure() }}
        run: uv run lightning fit --print_config

      - if: ${{ success() || failure() }}
        run: uv run bentoml_cli

      - if: ${{ failure() }}
        run: uv run python -m "${PROJECT_NAME}.lightning"

      - if: ${{ failure() }}
        run: uv run python -m "${PROJECT_NAME}.data.lightning"

      - if: ${{ failure() }}
        run: uv run data

  docker:
    permissions:
      contents: read
      packages: write

    runs-on: ubuntu-latest
    env:
      GHCR_IMAGE_NAME: ghcr.io/${{ github.repository }}
      HF_HOME: /tmp/huggingface
      PROJECT_NAME: mf_torch
      DOCKER_RUN_CMD: docker run --mount type=bind,source=/tmp/huggingface,target=/tmp/huggingface -e "HF_HOME=/tmp/huggingface"

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          sparse-checkout: uv.lock

      - uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4
        with:
          path: ${{ env.HF_HOME }}
          key: ${{ runner.os }}-huggingface-${{ hashFiles('**/uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-huggingface-

      - uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3

      - uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3

      - id: build
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6
        with:
          cache-from: ${{ env.GHCR_IMAGE_NAME }}:cache
          load: true

      - if: ${{ success() || failure() }}
        run: ${DOCKER_RUN_CMD} "${IMAGE_ID}" uv pip list
        env:
          IMAGE_ID: ${{ steps.build.outputs.imageid }}

      - if: ${{ success() || failure() }}
        run: ${DOCKER_RUN_CMD} "${IMAGE_ID}" uv run lightning fit --print_config
        env:
          IMAGE_ID: ${{ steps.build.outputs.imageid }}

      - if: ${{ success() || failure() }}
        run: ${DOCKER_RUN_CMD} "${IMAGE_ID}" uv run bentoml_cli
        env:
          IMAGE_ID: ${{ steps.build.outputs.imageid }}

      - if: ${{ failure() }}
        run: ${DOCKER_RUN_CMD} "${IMAGE_ID}" python -m "${PROJECT_NAME}.lightning"
        env:
          IMAGE_ID: ${{ steps.build.outputs.imageid }}

      - if: ${{ failure() }}
        run: ${DOCKER_RUN_CMD} "${IMAGE_ID}" python -m "${PROJECT_NAME}.data.lightning"
        env:
          IMAGE_ID: ${{ steps.build.outputs.imageid }}

      - if: ${{ failure() }}
        run: ${DOCKER_RUN_CMD} "${IMAGE_ID}" uv run data
        env:
          IMAGE_ID: ${{ steps.build.outputs.imageid }}

      - id: docker_metadata
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5
        with:
          images: ${{ env.GHCR_IMAGE_NAME }}

      - if: ${{ github.event_name == 'push' || github.ref_name == github.event.repository.default_branch }}
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}

      - if: ${{ github.event_name == 'push' || github.ref_name == github.event.repository.default_branch }}
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6
        with:
          cache-from: ${{ env.GHCR_IMAGE_NAME }}:cache
          cache-to: type=registry,ref=${{ env.GHCR_IMAGE_NAME }}:cache,mode=max
          tags: ${{ steps.docker_metadata.outputs.tags }}
          labels: ${{ steps.docker_metadata.outputs.labels }}
          annotations: ${{ steps.docker_metadata.outputs.annotations }}
          push: ${{ github.event_name == 'push' || github.ref_name == github.event.repository.default_branch }}
