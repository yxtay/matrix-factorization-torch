[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "mf-torch"
version = "0.1.0"
description = "Matrix Factorization Recommender Models in PyTorch with MovieLens"
authors = ["YuXuan Tay <wyextay@gmail.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
bentoml = "^1.3"
docarray = ">=0.40,<0.41"
flaml = "^2.3"
jsonargparse = { extras = ["signatures"], version = "^4.33" }
lancedb = ">=0.12,<0.14"
lightning = "^2.4"
loguru = ">=0.7,<0.8"
mlflow = "^2.16"
onnxscript = { allow-prereleases = true, version = ">=0.0,<0.2" }
onnxruntime = "^1.19"
optuna = "^4.0"
polars = { extras = ["pandas", "deltalake"], version = "^1.8" }
ray = { extras = ["data", "train", "tune"], version = "^2.37" }
tensorboard = "^2.18"
torch = [
    # torch>=2.3 not available for macOS x86_64
    { platform = "darwin", markers = "platform_system == 'Darwin'", version = "^2.2,<2.3" },
    { platform = "linux", markers = "platform_system == 'Linux'", version = "*" },
]
xxhash = "^3.4"

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.8"
ruff = ">=0.6,<0.7"

[tool.ruff]
fix = true
src = [".", "src", "tests"]
extend-include = ["*.ipynb"]

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "D",      # pydocstyle
    "E501",   # line-too-long
    "COM812", # missing-trailing-comma, conflicts with ruff formatter
    "ERA001", # commented-out-code
    "ISC001", # single-line-implicit-string-concatenation, conflicts with ruff formatter
]

[tool.ruff.lint.pydocstyle]
convention = "pep257"

[tool.ruff.lint.per-file-ignores]
"**/tests/**" = [
    "S101", # assert
]
